<?php
/*echo 和 print 区别
echo -- 可以输出一个或多个字符串，无返回值
print -- 只允许输出一个字符串，返回值总为1
print_r -- 打印关于变量的易于理解的信息,如果给出的是 string、integer 或 float，
           将打印变量值本身。如果给出的是 array，将会按照一定格式显示键和元素。
           object与数组类似。print_r() 将把数组的指针移到最后边。
           使用 reset() 可让指针回到开始处。
*/
$txt1="学习 PHP";
$txt2="努力";
$cars=array("Volvo","BMW","Toyota");
 
echo $txt1;  //直接输出变量值
echo "<br>";  //换行
echo "在$txt2 学习 PHP<br>"; //可在字符串中携带变量,变量和字符串内容中间一定有空格隔开
echo "在".$txt2." 学习 PHP<br>"; //效果和上一语句相同，'.'的作用在于连接字符串和变量
echo "我车的品牌是 {$cars[1]}<br>"; //{}可省略，表示一个整体
//print也具有上述功能
echo "I am ","now ","studying ","php!","<br>"; //输出多条字符串时中间用','隔开，print无此功能


/*EOF
PHP EOF(heredoc)是一种在命令行shell和程序语言里定义一个字符串的方法。
使用概述：
1. 必须后接分号
2. EOF可以用任意其它字符代替，只需保证结束标识与开始标识一致，且在正文中没有出现。
3. 结束标识必须顶格独自占一行，前后不能衔接任何空白和字符。
4. 开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。
5. 当内容需要内嵌引号（单引号或双引号）时，不需要加转义符
6. 加在其中的变量能够解析，函数不可以
*/
echo <<<EOF
    <h1>我的第一个标题</h1>
    <p>我的第一个段落。</p>
EOF;
$name="def";
$a= <<<EOF
    "abc"$name    
    "123"
EOF;
echo $a; //其中abc和123前后的引号会显示，def前后的引号不显示，
         //相当于在定义变量时，def作为一个字符串被存储，而"abc"和"123"整体被作为字符串
?>